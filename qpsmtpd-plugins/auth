#!/usr/bin/perl -w

=head1 NAME

auth - SMTP AUTH module using a database

=head1 SYNPOSIS

=head1 AUTHOR

Copyright 2010 Damien Churchill <damien.churchill@ukplc.net>

This software is free software and may be distributed under the same terms
as qpsmtpd itself.

=head1 VERSION

Version 0.1

=cut

use constant SMTP_PORT => getservbyname("smtp", "tcp") || 25;
use constant SSMTP_PORT => getservbyname("ssmtp", "tcp") || 465;
use Digest::HMAC_MD5 qw(hmac_md5_hex);

my %CONFIG_FIELDS = map { $_ => 1 } qw( 
	users_table
	username_field
	enabled_field
	password_field
	cleartext_field
);

my %CONFIG_FIELDS_EMPTY = map { $_ => 1 } qw( 
	cleartext_field
);

my %CONFIG_FIELDS_DEFAULT =
(
	'users_table'     => 'users',
	'username_field'  => 'email',
	'enabled_field'   => 'enabled',
	'password_field'  => 'password',
	'cleartext_field' => 'cleartext'
);

sub init {
	my ($self, $qp) = @_;
	$self->isa_plugin("vmail/common");
	$self->db_debug;
	$self->register_hook("auth-plain", "db_auth_hook");
	$self->register_hook("auth-login", "db_auth_hook");
	$self->register_hook("auth-cram-md5", "db_auth_hook");
	$self->SUPER::init($qp);
}

sub db_init_config
{
	my ($self, $config_fields, $config_fields_empty, $config_fields_default)  = @_; 
	%$config_fields         = %CONFIG_FIELDS;
	%$config_fields_empty   = %CONFIG_FIELDS_EMPTY;
	%$config_fields_default = %CONFIG_FIELDS_DEFAULT;
}

sub db_valid_config
{
	my ($self) = @_; 
	my $config  = $self->db_config();
}

sub db_auth_hook
{
	my ($self, $transaction, $method, $user, $passClear, $passHash, $ticket) = @_;
	my $config = $self->db_config;
	my $user_record = $self->user_email_record($user);
	
	# first check to see if the user is enabled, if not they should go away.
	if (!$user_record->{$config->{enabled_field}}) {
		# user is disabled in the database so they can't authenticate
		# using this method.
		return (DENY);
	}

	# TODO: uncomment this when ssl is supported.
	# We don't want to support any other auth type than cram-md5
	# over non-ssl connections.
	#if ($method !~ /CRAM-MD5/i and $self->qp->connection->local_port == SMTP_PORT) {
	#	return (DENY);
	#}

	my $cleartext = $user_record->{$config->{cleartext_field}};
	if (
		(defined $passClear and
			$passClear eq $cleartext) or

		(defined $passHash and
			$passHash eq hmac_md5_hex($ticket, $cleartext))) {
		return (OK);
	}

	return (DENY);
}

sub user_email_record
{
	my ($self, $user) = @_;
	$self->db_debug;

	my $config = $self->db_config;
	my $dbh    = $self->db_open;
	return undef unless $dbh;

	my $table = $dbh->quote_identifier($config->{users_table});
	my $user_field = $dbh->quote_identifier($config->{username_field});
	my $user_value = $dbh->quote($user);

	my $sql = "SELECT * FROM $table WHERE $user_field=$user_value";
	my $record = $self->db_sql($sql);
	return undef unless $dbh;

	return $record;
}
